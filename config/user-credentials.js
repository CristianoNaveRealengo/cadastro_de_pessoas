// ==============================================
// CONFIGURA√á√ÉO DE USU√ÅRIO √öNICO
// ==============================================

/**
 * Configura√ß√£o para sistema com usu√°rio √∫nico
 * Defina aqui as credenciais do usu√°rio autorizado
 */

export const USER_CONFIG = {
	// Credenciais do usu√°rio √∫nico autorizado
	email: "cristianonaverealengo@gmail.com",
	password: "lukasliam",
	uid: "wV5SD29tCMRZq8by3Pwe4m75l3w1",

	// Configura√ß√µes adicionais
	displayName: "Cristiano Nave Realengo",
	autoLogin: false, // Se true, faz login autom√°tico com as credenciais acima

	// Configura√ß√µes de seguran√ßa
	requireStrongPassword: false, // Se true, exige senha forte
	allowPasswordChange: true, // Se true, permite alterar senha
	sessionTimeout: 24 * 60 * 60 * 1000, // 24 horas em ms
};

/**
 * INSTRU√á√ïES DE USO:
 *
 * 1. ALTERE A SENHA PADR√ÉO acima para algo seguro
 *
 * 2. Para criar o usu√°rio no Firebase:
 *    - Abra o console do navegador
 *    - Execute: createInitialUser()
 *    - Ou use a interface de cadastro com as credenciais acima
 *
 * 3. Para login autom√°tico (desenvolvimento):
 *    - Defina autoLogin: true
 *    - O sistema far√° login automaticamente
 *
 * 4. Para produ√ß√£o:
 *    - Defina autoLogin: false
 *    - Defina requireStrongPassword: true
 *    - Use uma senha forte
 */

// Fun√ß√£o para criar usu√°rio inicial (execute no console)
window.createInitialUser = async function () {
	if (!window.firebaseService) {
		console.error("‚ùå FirebaseService n√£o encontrado");
		return;
	}

	try {
		console.log("üîÑ Criando usu√°rio inicial...");
		const user = await window.firebaseService.signUp(
			USER_CONFIG.email,
			USER_CONFIG.password
		);
		console.log("‚úÖ Usu√°rio inicial criado:", user.email);
		console.log("üìã UID do usu√°rio:", user.uid);
		console.log("üí° Adicione este UID √†s regras do Firestore");

		return user;
	} catch (error) {
		if (error.code === "auth/email-already-in-use") {
			console.log("‚ÑπÔ∏è Usu√°rio j√° existe, fazendo login...");
			try {
				const user = await window.firebaseService.signIn(
					USER_CONFIG.email,
					USER_CONFIG.password
				);
				console.log("‚úÖ Login realizado:", user.email);
				console.log("üìã UID do usu√°rio:", user.uid);
				return user;
			} catch (loginError) {
				console.error("‚ùå Erro no login:", loginError);
			}
		} else {
			console.error("‚ùå Erro ao criar usu√°rio:", error);
		}
	}
};

// Auto-login se configurado
if (USER_CONFIG.autoLogin && typeof window !== "undefined") {
	window.addEventListener("load", async () => {
		// Aguardar FirebaseService estar dispon√≠vel
		const waitForService = () => {
			return new Promise((resolve) => {
				const check = () => {
					if (window.firebaseService) {
						resolve();
					} else {
						setTimeout(check, 100);
					}
				};
				check();
			});
		};

		await waitForService();

		// Verificar se j√° est√° logado
		if (!window.firebaseService.isUserLoggedIn()) {
			try {
				console.log("üîÑ Fazendo auto-login...");
				await window.firebaseService.signIn(
					USER_CONFIG.email,
					USER_CONFIG.password
				);
				console.log("‚úÖ Auto-login realizado com sucesso");
			} catch (error) {
				console.log(
					"‚ÑπÔ∏è Auto-login falhou, usu√°rio precisa fazer login manual"
				);
			}
		}
	});
}

export default USER_CONFIG;
